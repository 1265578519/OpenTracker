.TH scan_ip6if 3
.SH NAME
scan_ip6 \- parse an IPv6 number and interface in ASCII representation
.SH SYNTAX
.B #include <ip6.h>

int \fBscan_ip6if\fP(const char *\fIsrc\fR,char \fIip\fR[16],uint32* scope_id);
.SH DESCRIPTION
scan_ip6if parses an IPv6 number in RFC1884 ASCII representation
from \fIsrc\fR and writes the result into \fIip\fR. If the IPv6 number
is followed by the percent sign, scan_ip6if takes the word following
that, tries to parse it as network interface and writes the result to
\fIscope_id\fR.

It returns the number of bytes read from \fIsrc\fR or 0 if the parsing
failed.

scan_ip6if accepts upper and lower case hex letters, it understands "::"
compression and partial IPv4 addresses as in "::FFFF:129.144.52.38".

To allow transparent usage of IPv4 in IPv6 applications, scan_ip6if also
understands IPv4 addresses in dotted-decimal notation and will return
an IPv4-mapped IPv6 address (i.e. "127.0.0.1" will be parsed as
"::FFFF:127.0.0.1".

Unlike many other IP parsing routines, scan_ip6if does not recognize octal
(like \fB0177.0.0.1\fR) or hexadecimal numbers (like \fB0x7f000001\fR)
in the IPv4 part.
.SH EXAMPLE
#include <str.h>
.br
#include <ip6.h>

  char buf[]="::1%lo";
  char ip[16];
  uint32 scope_id;
  if (scan_ip6if(buf,ip,&scope_id) != str_len(buf))
    parse_error();

.SH "SEE ALSO"
fmt_ip6(3), scan_ip4(3), fmt_ip6if(3)
